user  nginx;
worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  client_max_body_size 100m;

  upstream backend {
    server backend:8000;
  }

  upstream asgiserver {
    server asgiserver:9000;
  }

  upstream frontend {
    server frontend:8080;
  }

  # upstream redis-commander {
  #   server redis-commander:8081;
  # }

  # upstream flower {
  #   server flower:5555;
  # }


  server {
    listen 80;
    charset utf-8;

    # frontend urls
    location / {
    proxy_redirect off;
    proxy_pass http://frontend;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    }

    # location /ws/ {
    #   try_files $uri @proxy_to_ws;
    # }
    
    # flower
    # location /flower/ {
    #     rewrite ^/flower/(.*)$ /$1 break;
    #     proxy_pass http://flower/;
    #     proxy_set_header Host $host;
    #     proxy_redirect off;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

     # portainer
    # location /redis-commander/ {
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "";
    #     proxy_pass http://redis-commander/;
    # }


    # frontend dev-server
    location /sockjs-node {
      proxy_redirect off;
      proxy_pass http://frontend;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /ws {
        proxy_pass http://asgiserver;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
    }

    # backend urls
    location ~ ^/(admin|api|static|graphql) {
      proxy_redirect off;
      proxy_pass http://backend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
    }
  }
}